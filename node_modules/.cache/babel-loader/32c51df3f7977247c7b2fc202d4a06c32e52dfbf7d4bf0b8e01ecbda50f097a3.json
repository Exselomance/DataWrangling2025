{"ast":null,"code":"var _jsxFileName = \"/Users/vladislav/dw2/frontend/src/CountryChart.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, CartesianGrid, ResponsiveContainer } from \"recharts\";\nimport useFetch from \"./getDataFromJson\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryFilmChart = () => {\n  _s();\n  const {\n    data,\n    error,\n    loading\n  } = useFetch();\n  const [chartData, setChartData] = useState([]);\n  useEffect(() => {\n    if (data) {\n      const countryCount = {};\n      data.forEach(film => {\n        if (Array.isArray(film[\"Country of Origin\"])) {\n          film[\"Country of Origin\"].forEach(country => {\n            countryCount[country] = (countryCount[country] || 0) + 1;\n          });\n        }\n      });\n      const formattedData = Object.keys(countryCount).map(country => ({\n        country,\n        count: countryCount[country]\n      }));\n      setChartData(formattedData);\n    }\n  }, [data]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      paddingTop: \"10px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"90%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 700,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: chartData,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 40,\n            bottom: 110\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"country\",\n            tick: {\n              fontSize: 12\n            },\n            angle: -45,\n            textAnchor: \"end\",\n            interval: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            width: 100,\n            ticks: [1, 5, 10, 30, 49]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"count\",\n            name: \"Amount of films\",\n            fill: \"#76c7c0\",\n            animationDuration: 7000\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(CountryFilmChart, \"FvgAbDWSAe57dNOOpymaoHk83XM=\", false, function () {\n  return [useFetch];\n});\n_c = CountryFilmChart;\nexport default CountryFilmChart;\nvar _c;\n$RefreshReg$(_c, \"CountryFilmChart\");","map":{"version":3,"names":["useState","useEffect","BarChart","Bar","XAxis","YAxis","Tooltip","Legend","CartesianGrid","ResponsiveContainer","useFetch","jsxDEV","_jsxDEV","CountryFilmChart","_s","data","error","loading","chartData","setChartData","countryCount","forEach","film","Array","isArray","country","formattedData","Object","keys","map","count","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","display","flexDirection","alignItems","height","paddingTop","justifyContent","width","margin","top","right","left","bottom","strokeDasharray","dataKey","tick","fontSize","angle","textAnchor","interval","ticks","name","fill","animationDuration","_c","$RefreshReg$"],"sources":["/Users/vladislav/dw2/frontend/src/CountryChart.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, CartesianGrid, ResponsiveContainer } from \"recharts\";\nimport useFetch from \"./getDataFromJson\";\n\nconst CountryFilmChart = () => {\n    const { data, error, loading } = useFetch();\n    const [chartData, setChartData] = useState([]);\n\n    useEffect(() => {\n        if (data) {\n            const countryCount = {};\n\n            data.forEach((film) => {\n                if (Array.isArray(film[\"Country of Origin\"])) {\n                    film[\"Country of Origin\"].forEach((country) => {\n                        countryCount[country] = (countryCount[country] || 0) + 1;\n                    });\n                }\n            });\n\n            const formattedData = Object.keys(countryCount).map((country) => ({\n                country,\n                count: countryCount[country],\n            }));\n\n            setChartData(formattedData);\n        }\n    }, [data]);\n\n    if (loading) return <p>Загрузка данных...</p>;\n    if (error) return <p style={{ color: \"red\" }}>Ошибка: {error}</p>;\n\n    return (\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", height: \"100vh\", paddingTop: \"10px\" }}>\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width: \"90%\" }}>\n                <ResponsiveContainer width=\"100%\" height={700}>\n                    <BarChart data={chartData} margin={{ top: 20, right: 30, left: 40, bottom: 110 }}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis\n                            dataKey=\"country\"\n                            tick={{ fontSize: 12 }}\n                            angle={-45}\n                            textAnchor=\"end\"\n                            interval={0}\n                        />\n                        <YAxis\n                            width={100}\n                            ticks={[1, 5, 10, 30, 49]}\n                        />\n                        <Tooltip />\n                        <Legend />\n                        <Bar dataKey=\"count\" name=\"Amount of films\" fill=\"#76c7c0\" animationDuration={7000} />\n                    </BarChart>\n                </ResponsiveContainer>\n            </div>\n        </div>\n    );\n};\n\nexport default CountryFilmChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}